// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: products.sql

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const getProduct = `-- name: GetProduct :one
SELECT id, name, description, price, image_url, created_at, updated_at FROM products WHERE id = $1
`

func (q *Queries) GetProduct(ctx context.Context, id uuid.UUID) (Product, error) {
	row := q.db.QueryRow(ctx, getProduct, id)
	var i Product
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Description,
		&i.Price,
		&i.ImageUrl,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const insertProduct = `-- name: InsertProduct :one
INSERT INTO
    products (
        name,
        description,
        price,
        image_url
    )
VALUES ($1, $2, $3, $4) RETURNING id
`

type InsertProductParams struct {
	Name        string
	Description pgtype.Text
	Price       pgtype.Numeric
	ImageUrl    pgtype.Text
}

func (q *Queries) InsertProduct(ctx context.Context, arg InsertProductParams) (uuid.UUID, error) {
	row := q.db.QueryRow(ctx, insertProduct,
		arg.Name,
		arg.Description,
		arg.Price,
		arg.ImageUrl,
	)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}
